{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription, fromEvent, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../header/header.component\";\nconst _c0 = [\"submit\"];\nfunction MainComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" loading ...\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainComponent_ng_template_2_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r8.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r8.name);\n  }\n}\nfunction MainComponent_ng_template_2_div_15_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtext(1, \" Required field and number has to be between 0 and 360 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainComponent_ng_template_2_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"label\", 22);\n    i0.ɵɵtext(2, \"Link to Image: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 24)(6, \"label\", 25);\n    i0.ɵɵtext(7, \"Degrees\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 26, 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, MainComponent_ng_template_2_div_15_span_10_Template, 2, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r5.imageSelected, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.imageSelected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.rotateDegreesForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.rotateDegreesForm.controls[\"degrees\"].touched && ctx_r5.rotateDegreesForm.controls[\"degrees\"].errors);\n  }\n}\nfunction MainComponent_ng_template_2_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 30);\n    i0.ɵɵtext(2, \"Brightness\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 31, 32);\n    i0.ɵɵlistener(\"change\", function MainComponent_ng_template_2_div_16_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.brightnessChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 33);\n    i0.ɵɵtext(6, \"Contrast\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 34, 35);\n    i0.ɵɵlistener(\"change\", function MainComponent_ng_template_2_div_16_Template_input_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.contrastChange($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MainComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5)(4, \"select\", 6, 7);\n    i0.ɵɵlistener(\"change\", function MainComponent_ng_template_2_Template_select_change_4_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const _r3 = i0.ɵɵreference(5);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onSelected(_r3.value));\n    });\n    i0.ɵɵelementStart(6, \"option\", 8);\n    i0.ɵɵtext(7, \"Select Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, MainComponent_ng_template_2_option_8_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 10);\n    i0.ɵɵtext(10, \"Image selection\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 11)(12, \"div\", 12);\n    i0.ɵɵelement(13, \"img\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(14, \"div\", 14);\n    i0.ɵɵtemplate(15, MainComponent_ng_template_2_div_15_Template, 11, 4, \"div\", 15);\n    i0.ɵɵtemplate(16, MainComponent_ng_template_2_div_16_Template, 9, 0, \"div\", 16);\n    i0.ɵɵelementStart(17, \"div\", 17)(18, \"button\", 18, 19);\n    i0.ɵɵlistener(\"click\", function MainComponent_ng_template_2_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.submitChanges());\n    });\n    i0.ɵɵtext(20, \"Submit Changes\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.imagesList);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r2.imageSelected ? ctx_r2.imageSelected : ctx_r2.imageDefault, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.imageSelected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.imageSelected);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.rotateDegreesForm.controls[\"degrees\"].errors || !ctx_r2.imageSelected);\n  }\n}\nexport class MainComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.API_IMAGES_URL = 'https://storage.googleapis.com/nanlabs-engineering-technical-interviews/imgix-samples-list.json';\n    this.imagesList = [];\n    this.imageSelected = '';\n    this.imageDefault = '../../assets/images/image.png';\n    this.rotateComponentActive = false;\n    this.subscriptions = new Subscription();\n    this.lastDegrees = [];\n    this.brightness = 0;\n    this.contrast = 0;\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.loadImages();\n    this.rotateDegreesForm = new FormGroup({\n      degrees: new FormControl(0, [Validators.required, Validators.min(0), Validators.max(359)])\n    });\n  }\n  ngAfterViewInit() {\n    fromEvent(document.getElementById('button-submit'), 'click').pipe(map(response => {\n      this.imageSelected = this.defaultImageSelectedValue;\n      return this.imageSelected + '?rot=' + this.rotationDegrees + '&bri=' + this.brightness + '&con=' + this.contrast;\n    })).subscribe(response => {\n      this.imageSelected = response;\n      console.log(this.imageSelected);\n    });\n  }\n  brightnessChange(e) {\n    this.brightness = e.target.value;\n  }\n  contrastChange(e) {\n    this.contrast = e.target.value;\n  }\n  undo() {}\n  redo() {}\n  submitChanges() {\n    this.loading = true;\n    this.rotationDegrees = this.rotateDegreesForm.controls['degrees'].value;\n  }\n  loadImages() {\n    this.apiService.get(this.API_IMAGES_URL).pipe(map(response => response)).subscribe(Response => this.imagesList = Response);\n  }\n  onSelected(imageUrl) {\n    this.imageSelected = imageUrl == 'default' ? this.imageDefault : imageUrl;\n    this.defaultImageSelectedValue = this.imageSelected;\n  }\n  static #_ = this.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    viewQuery: function MainComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.submit = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loaded\", \"\"], [1, \"row\", \"mt-3\"], [1, \"col-lg-6\", \"offset-lg-3\"], [1, \"text-center\", \"w-100\"], [1, \"form-floating\", \"text-center\"], [\"id\", \"floatingSelect\", 1, \"form-select\", \"w-50\", 3, \"change\"], [\"image\", \"\"], [\"selected\", \"\", \"value\", \"default\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"floatingSelect\"], [1, \"card\", \"mt-3\"], [1, \"card-body\", \"rounded\", \"text-center\", \"card-image\"], [\"alt\", \"\", 1, \"w-50\", \"h-50\", 3, \"src\"], [1, \"text-center\", \"mt-3\", \"w-100\"], [\"class\", \"input-group input-group-sm mb-3 mt-3 d-flex\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [\"type\", \"button\", \"id\", \"button-submit\", 1, \"btn\", \"btn-primary\", \"mt-4\", \"w-50\", \"text-center\", 3, \"disabled\", \"click\"], [\"submit\", \"\"], [3, \"value\"], [1, \"input-group\", \"input-group-sm\", \"mb-3\", \"mt-3\", \"d-flex\"], [\"for\", \"\", 1, \"form-label\"], [1, \"linkToImage\", 3, \"href\"], [1, \"d-flex\", \"mt-2\", 3, \"formGroup\"], [\"for\", \"rotateInput\", 1, \"rotateLabel\", \"form-label\", \"d-flex\", \"justify-content-center\", \"mr-3\"], [\"type\", \"number\", \"formControlName\", \"degrees\", \"aria-label\", \"Sizing example input\", \"aria-describedby\", \"inputGroup-sizing-sm\", 1, \"form-control\"], [\"rotateInput\", \"\"], [\"class\", \"text-danger d-flex justify-content-center\", 4, \"ngIf\"], [1, \"text-danger\", \"d-flex\", \"justify-content-center\"], [\"for\", \"brightness\", 1, \"form-label\"], [\"type\", \"range\", \"min\", \"-100\", \"value\", \"0\", \"max\", \"100\", \"id\", \"brightness\", 1, \"form-range\", 3, \"change\"], [\"brightness\", \"\"], [\"for\", \"contrast\", 1, \"form-label\"], [\"type\", \"range\", \"min\", \"-100\", \"value\", \"0\", \"max\", \"100\", \"id\", \"contrast\", 1, \"form-range\", 3, \"change\"], [\"contrast\", \"\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵtemplate(1, MainComponent_div_1_Template, 2, 0, \"div\", 0);\n        i0.ɵɵtemplate(2, MainComponent_ng_template_2_Template, 21, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.HeaderComponent],\n    styles: [\".card-image[_ngcontent-%COMP%] {\\n  background-color: #b0b0b0;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n\\n.rotateLabel[_ngcontent-%COMP%] {\\n  align-items: center;\\n  margin-right: 10px;\\n}\\n\\n.linkToImage[_ngcontent-%COMP%] {\\n  margin-left: 10px !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbWFpbi9tYWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSSw0QkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaW1hZ2V7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjBiMGIwO1xyXG59XHJcblxyXG4uYnRue1xyXG4gICAgbWFyZ2luLWxlZnQ6MTBweDtcclxufVxyXG5cclxuLnJvdGF0ZUxhYmVse1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG5cclxuLmxpbmtUb0ltYWdle1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHghaW1wb3J0YW50O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Subscription","fromEvent","map","i0","MainComponent","constructor","apiService","ngOnInit","loadImages","rotateDegreesForm","degrees","required","min","max","ngAfterViewInit","document","getElementById","pipe","response","imageSelected","defaultImageSelectedValue","rotationDegrees","brightness","contrast","subscribe","console","log","brightnessChange","e","target","value","contrastChange","undo","redo","submitChanges","loading","controls","get","API_IMAGES_URL","Response","imagesList","onSelected","imageUrl","imageDefault","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Claudio\\Downloads\\test-project\\src\\app\\pages\\main\\main.component.ts","C:\\Users\\Claudio\\Downloads\\test-project\\src\\app\\pages\\main\\main.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription, debounceTime, distinct, fromEvent, map, switchMap, tap } from 'rxjs';\nimport { ImageList } from 'src/app/interfaces/imageList';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, AfterViewInit {\n  private API_IMAGES_URL = 'https://storage.googleapis.com/nanlabs-engineering-technical-interviews/imgix-samples-list.json';\n  public imagesList: ImageList[] = [];\n  public imageSelected: string = '';;\n  public imageDefault: string = '../../assets/images/image.png';\n  public rotateComponentActive : boolean = false;\n  public rotateDegreesForm : FormGroup;\n  public subscriptions = new Subscription();\n  public defaultImageSelectedValue : string ;\n  public rotationDegrees : number ;\n  public lastDegrees : number[] = [] ;\n  public brightness : number = 0 ;\n  public contrast : number = 0 ;\n  public loading : boolean = false;\n\n\n  @ViewChild('submit',{ static: true }) submit! : ElementRef;\n\n\n  constructor(private apiService : ApiService){\n  }\n\n  ngOnInit(): void {\n      this.loadImages();\n      this.rotateDegreesForm = new FormGroup({\n        degrees: new FormControl(0,[\n        Validators.required, Validators.min(0), Validators.max(359)]),\n      })\n  }\n\n  ngAfterViewInit(): void {\n    fromEvent<Event>(document.getElementById('button-submit') as HTMLElement, 'click').pipe(\n      map((response) => {\n        this.imageSelected = this.defaultImageSelectedValue;\n        return this.imageSelected + '?rot=' + this.rotationDegrees + '&bri=' + this.brightness + '&con=' + this.contrast;\n      })\n    ).subscribe(response => {\n      this.imageSelected = response;\n      console.log(this.imageSelected)\n    }\n     )\n  }\n\n  brightnessChange(e : any){\n    this.brightness = e.target.value;\n  }\n\n  contrastChange(e : any){\n    this.contrast = e.target.value;\n  }\n\n  undo(){//todo\n  }\n\n  redo(){//todo\n  }\n\n  submitChanges(){\n    this.loading = true;\n    this.rotationDegrees = this.rotateDegreesForm.controls['degrees'].value;\n  }\n\n  loadImages(){\n     this.apiService.get(this.API_IMAGES_URL)\n    .pipe(\n    map((response : ImageList[]) => response)\n    ).subscribe((Response: ImageList[]) => this.imagesList = Response);\n  }\n\n  onSelected(imageUrl: string){\n    this.imageSelected = imageUrl == 'default' ? this.imageDefault : imageUrl;\n    this.defaultImageSelectedValue = this.imageSelected;\n  }\n\n}","<app-header></app-header>\n<div *ngIf=\"loading else loaded\">\n    loading ...\n</div>\n<ng-template #loaded>\n    <div class=\"row mt-3\">\n        <div class=\"col-lg-6 offset-lg-3\">\n            <div class=\"text-center w-100\">\n                <div class=\"form-floating text-center\">\n                    <select #image (change)=\"onSelected(image.value)\" class=\"form-select w-50\" id=\"floatingSelect\">\n                      <option selected value=\"default\">Select Image</option>\n                      <option *ngFor=\"let option of imagesList\" value=\"{{option.url}}\">{{option.name}}</option>\n                    </select>\n                    <label for=\"floatingSelect\">Image selection</label>\n                  </div>\n            </div>\n            <div class=\"card mt-3\">\n                <div class=\"card-body rounded text-center card-image\">\n                    <img class=\"w-50 h-50\" src=\"{{imageSelected ? imageSelected : imageDefault}}\" alt=\"\">\n                </div>\n            </div>\n            <div class=\"text-center mt-3 w-100\">\n                <!-- <button type=\"button\" (click)=\"undo()\" [disabled]=\"lastDegrees.length < 1\" class=\"btn btn-primary\">Undo</button>\n                <button type=\"button\" (click)=\"redo()\" [disabled]=\"!redoEnabled\" class=\"btn btn-primary\">Redo</button> -->\n            </div>\n            <div *ngIf=\"imageSelected\" class=\"input-group input-group-sm mb-3 mt-3 d-flex\">\n                <label class=\"form-label\" for=\"\">Link to Image: </label>\n                <a class=\"linkToImage\" href=\"{{imageSelected}}\">{{imageSelected}}</a>\n                <form [formGroup]=\"rotateDegreesForm\" class=\"d-flex mt-2\">\n                    <label for=\"rotateInput\" class=\"rotateLabel form-label d-flex justify-content-center mr-3\">Degrees</label>\n                    <input #rotateInput type=\"number\" class=\"form-control\" formControlName=\"degrees\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\">\n                </form>\n                <span class=\"text-danger d-flex justify-content-center\"\n                *ngIf=\"(rotateDegreesForm.controls['degrees'].touched) && rotateDegreesForm.controls['degrees'].errors\">\n                Required field and number has to be between 0 and 360\n                </span>\n            </div>\n            <div *ngIf=\"imageSelected\">\n                <label for=\"brightness\" class=\"form-label\">Brightness</label>\n                <input #brightness type=\"range\" (change)=\"brightnessChange($event)\"\n                class=\"form-range\" min=\"-100\" value=\"0\" max=\"100\" id=\"brightness\">\n                <label for=\"contrast\" class=\"form-label\">Contrast</label>\n                <input #contrast type=\"range\" (change)=\"contrastChange($event)\"\n                class=\"form-range\" min=\"-100\" value=\"0\" max=\"100\" id=\"contrast\">\n            </div>\n    \n            <div class=\"row d-flex justify-content-center\">\n                <button #submit type=\"button\" (click)=\"submitChanges()\" [disabled]=\"rotateDegreesForm.controls['degrees'].errors || !imageSelected\"\n                id=\"button-submit\" class=\" btn btn-primary mt-4 w-50 text-center\">Submit Changes</button>\n            </div>\n        </div>\n    \n    </div>\n</ng-template>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}