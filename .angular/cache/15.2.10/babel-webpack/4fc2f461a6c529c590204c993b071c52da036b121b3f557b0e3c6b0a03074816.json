{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../header/header.component\";\nimport * as i4 from \"../rotate/rotate.component\";\nfunction MainComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r3.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r3.name);\n  }\n}\nfunction MainComponent_app_rotate_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-rotate\");\n  }\n}\nexport class MainComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.API_IMAGES_URL = 'https://storage.googleapis.com/nanlabs-engineering-technical-interviews/imgix-samples-list.json';\n    this.imagesList = [];\n    this.imageSelected = '';\n    this.imageDefault = '../../assets/images/image.png';\n    this.rotateComponentActive = false;\n  }\n  ngOnInit() {\n    this.loadImages();\n  }\n  loadImages() {\n    let subscriber$ = this.apiService.get(this.API_IMAGES_URL).pipe(map(response => response)).subscribe(Response => this.imagesList = Response);\n  }\n  onSelected(imageUrl) {\n    this.imageSelected = imageUrl == 'default' ? this.imageDefault : imageUrl;\n  }\n  rotateComponent() {\n    this.rotateComponentActive == false ? true : false;\n    console.log(this.rotateComponentActive);\n  }\n  static #_ = this.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    decls: 25,\n    vars: 3,\n    consts: [[1, \"row\", \"mt-3\"], [1, \"col-lg-6\", \"offset-lg-3\"], [1, \"text-center\", \"w-100\"], [1, \"form-floating\", \"text-center\"], [\"id\", \"floatingSelect\", 1, \"form-select\", \"w-50\", 3, \"change\"], [\"image\", \"\"], [\"selected\", \"\", \"value\", \"default\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"floatingSelect\"], [1, \"card\", \"mt-3\"], [1, \"card-body\", \"rounded\", \"text-center\", \"card-image\"], [\"alt\", \"\", 1, \"w-50\", \"h-50\", 3, \"src\"], [1, \"text-center\", \"mt-3\", \"w-100\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"select\", 4, 5);\n        i0.ɵɵlistener(\"change\", function MainComponent_Template_select_change_5_listener() {\n          i0.ɵɵrestoreView(_r4);\n          const _r0 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.onSelected(_r0.value));\n        });\n        i0.ɵɵelementStart(7, \"option\", 6);\n        i0.ɵɵtext(8, \"Select Image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, MainComponent_option_9_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Image selection\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10);\n        i0.ɵɵelement(14, \"img\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 12)(16, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MainComponent_Template_button_click_16_listener() {\n          return ctx.rotateComponent();\n        });\n        i0.ɵɵtext(17, \"Rotate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 14);\n        i0.ɵɵtext(19, \"Adjust\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \"Undo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 14);\n        i0.ɵɵtext(23, \"Redo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(24, MainComponent_app_rotate_24_Template, 1, 0, \"app-rotate\", 15);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.imagesList);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.imageSelected ? ctx.imageSelected : ctx.imageDefault, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.rotateComponentActive);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.HeaderComponent, i4.RotateComponent],\n    styles: [\".card-image[_ngcontent-%COMP%] {\\n  background-color: #b0b0b0;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbWFpbi9tYWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1pbWFnZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiMGIwYjA7XHJcbn1cclxuXHJcbi5idG57XHJcbiAgICBtYXJnaW4tbGVmdDoxMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,GAAG,QAAQ,MAAM;;;;;;;;ICMRC,kCAAiE;IAAAA,YAAe;IAAAA,iBAAS;;;;IAA/CA,gDAAsB;IAACA,eAAe;IAAfA,oCAAe;;;;;IAgB1FA,6BAAuD;;;ADb/D,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,UAAuB;IAAvB,eAAU,GAAVA,UAAU;IALtB,mBAAc,GAAG,iGAAiG;IACnH,eAAU,GAAgB,EAAE;IAC5B,kBAAa,GAAW,EAAE;IAC1B,iBAAY,GAAW,+BAA+B;IACtD,0BAAqB,GAAa,KAAK;EAE9C;EAEAC,QAAQ;IACJ,IAAI,CAACC,UAAU,EAAE;EACrB;EAEAA,UAAU;IACV,IAAIC,WAAW,GAAG,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,IAAI,CAACC,cAAc,CAAC,CACvDC,IAAI,CACLV,GAAG,CAAEW,QAAsB,IAAKA,QAAQ,CAAC,CACxC,CAACC,SAAS,CAAEC,QAAqB,IAAK,IAAI,CAACC,UAAU,GAAGD,QAAQ,CAAC;EAEpE;EAEAE,UAAU,CAACC,QAAgB;IACzB,IAAI,CAACC,aAAa,GAAGD,QAAQ,IAAI,SAAS,GAAG,IAAI,CAACE,YAAY,GAAGF,QAAQ;EAC3E;EAEAG,eAAe;IACb,IAAI,CAACC,qBAAqB,IAAI,KAAK,GAAG,IAAI,GAAG,KAAK;IAClDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,qBAAqB,CAAC;EACzC;EAAC;qBA5BUlB,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QCV1B1B,6BAAyB;QACzBA,8BAAsB;QAISA;UAAAA;UAAA;UAAA,OAAUA,wCAAuB;QAAA,EAAC;QAC/CA,iCAAiC;QAAAA,4BAAY;QAAAA,iBAAS;QACtDA,oEAAyF;QAC3FA,iBAAS;QACTA,iCAA4B;QAAAA,gCAAe;QAAAA,iBAAQ;QAG3DA,+BAAuB;QAEfA,2BAAqF;QACzFA,iBAAM;QAEVA,gCAAoC;QACVA;UAAA,OAAS2B,qBAAiB;QAAA,EAAC;QAAyB3B,uBAAM;QAAAA,iBAAS;QACzFA,mCAA8C;QAAAA,uBAAM;QAAAA,iBAAS;QAC7DA,mCAA8C;QAAAA,qBAAI;QAAAA,iBAAS;QAC3DA,mCAA8C;QAAAA,qBAAI;QAAAA,iBAAS;QAE/DA,+EAAuD;QAC3DA,iBAAM;;;QAjBmCA,eAAa;QAAbA,wCAAa;QAOnBA,eAAsD;QAAtDA,2GAAsD;QASxEA,gBAA2B;QAA3BA,gDAA2B","names":["map","i0","MainComponent","constructor","apiService","ngOnInit","loadImages","subscriber$","get","API_IMAGES_URL","pipe","response","subscribe","Response","imagesList","onSelected","imageUrl","imageSelected","imageDefault","rotateComponent","rotateComponentActive","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Claudio\\Downloads\\test-project\\src\\app\\pages\\main\\main.component.ts","C:\\Users\\Claudio\\Downloads\\test-project\\src\\app\\pages\\main\\main.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { map } from 'rxjs';\nimport { ImageList } from 'src/app/interfaces/imageList';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  private API_IMAGES_URL = 'https://storage.googleapis.com/nanlabs-engineering-technical-interviews/imgix-samples-list.json';\n  public imagesList: ImageList[] = [];\n  public imageSelected: String = '';;\n  public imageDefault: String = '../../assets/images/image.png';\n  public rotateComponentActive : boolean = false;\n  constructor(private apiService : ApiService){\n  }\n\n  ngOnInit(): void {\n      this.loadImages();\n  }\n\n  loadImages(){\n  let subscriber$ = this.apiService.get(this.API_IMAGES_URL)\n    .pipe(\n    map((response : ImageList[]) => response)\n    ).subscribe((Response: ImageList[]) => this.imagesList = Response);\n\n  }\n\n  onSelected(imageUrl: string){\n    this.imageSelected = imageUrl == 'default' ? this.imageDefault : imageUrl;\n  }\n\n  rotateComponent(){\n    this.rotateComponentActive == false ? true : false;\n    console.log(this.rotateComponentActive)\n  }\n\n}","<app-header></app-header>\n<div class=\"row mt-3\">\n    <div class=\"col-lg-6 offset-lg-3\">\n        <div class=\"text-center w-100\">\n            <div class=\"form-floating text-center\">\n                <select #image (change)=\"onSelected(image.value)\" class=\"form-select w-50\" id=\"floatingSelect\">\n                  <option selected value=\"default\">Select Image</option>\n                  <option *ngFor=\"let option of imagesList\" value=\"{{option.url}}\">{{option.name}}</option>\n                </select>\n                <label for=\"floatingSelect\">Image selection</label>\n              </div>\n        </div>\n        <div class=\"card mt-3\">\n            <div class=\"card-body rounded text-center card-image\">\n                <img class=\"w-50 h-50\" src=\"{{imageSelected ? imageSelected : imageDefault}}\" alt=\"\">\n            </div>\n        </div>\n        <div class=\"text-center mt-3 w-100\">\n            <button type=\"button\" (click)=\"rotateComponent()\" class=\"btn btn-primary\">Rotate</button>\n            <button type=\"button\" class=\"btn btn-primary\">Adjust</button>\n            <button type=\"button\" class=\"btn btn-primary\">Undo</button>\n            <button type=\"button\" class=\"btn btn-primary\">Redo</button>\n        </div>\n        <app-rotate *ngIf=\"rotateComponentActive\"></app-rotate>\n    </div>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}