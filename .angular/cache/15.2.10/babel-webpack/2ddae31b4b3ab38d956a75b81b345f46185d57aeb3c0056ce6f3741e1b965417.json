{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RotateComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1, \" Value required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RotateComponent {\n  constructor() {\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.rotateDegreesForm = new FormGroup({\n      degrees: new FormControl([0, Validators.required, Validators.min(0), Validators.max(360)])\n    });\n  }\n  get rotateDegreesFormControl() {\n    return this.rotateDegreesForm.controls;\n  }\n  rotate() {\n    this.submitted = true;\n    if (this.rotateDegreesForm.valid) {\n      console.log(this.rotateDegreesForm);\n    }\n  }\n  static #_ = this.ɵfac = function RotateComponent_Factory(t) {\n    return new (t || RotateComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RotateComponent,\n    selectors: [[\"app-rotate\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"input-group\", \"input-group-sm\", \"mb-3\", \"mt-3\", \"d-flex\", \"justify-content-center\"], [1, \"d-flex\", \"text-center\", 3, \"formGroup\"], [\"id\", \"inputGroup-sizing-sm\", 1, \"input-group-text\"], [\"type\", \"number\", \"formControlName\", \"degrees\", \"aria-label\", \"Sizing example input\", \"aria-describedby\", \"inputGroup-sizing-sm\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"text-danger\"]],\n    template: function RotateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Rotate degrees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵtemplate(5, RotateComponent_span_5_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function RotateComponent_Template_button_click_6_listener() {\n          return ctx.rotate();\n        });\n        i0.ɵɵtext(7, \"Rotate\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.rotateDegreesForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (ctx.rotateDegreesForm.controls[\"degrees\"].touched || ctx.submitted) && ctx.rotateDegreesForm.controls[\"degrees\"].errors);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICG3DC,+BACqH;IACrHA,gCACJ;IAAAA,iBAAO;;;ADCX,OAAM,MAAOC,eAAe;EAK1BC;IAHO,cAAS,GAAG,KAAK;EAKxB;EAEAC,QAAQ;IACN,IAAI,CAACC,iBAAiB,GAAG,IAAIN,SAAS,CAAC;MACrCO,OAAO,EAAE,IAAIR,WAAW,CAAC,CAAC,CAAC,EAC3BE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,GAAG,CAAC,CAAC,CAAC,EAAER,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,CAAC;KAC/D,CAAC;EACF;EAEA,IAAIC,wBAAwB;IAC1B,OAAO,IAAI,CAACL,iBAAiB,CAACM,QAAQ;EACxC;EAEAC,MAAM;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACR,iBAAiB,CAACS,KAAK,EAAE;MAChCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,iBAAiB,CAAC;;EAEvC;EAAC;qBAzBUH,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAe;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCR5BpB,8BAAgF;QAEfA,8BAAc;QAAAA,iBAAO;QAC9EA,2BAA8I;QAC9IA,kEAGG;QACHA,iCAAiE;QAA3CA;UAAA,OAASqB,YAAQ;QAAA,EAAC;QAAyBrB,sBAAM;QAAAA,iBAAS;;;QAP9EA,eAA+B;QAA/BA,iDAA+B;QAIhCA,eAAkH;QAAlHA,+IAAkH","names":["FormControl","FormGroup","Validators","i0","RotateComponent","constructor","ngOnInit","rotateDegreesForm","degrees","required","min","max","rotateDegreesFormControl","controls","rotate","submitted","valid","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Claudio\\Downloads\\test-project\\src\\app\\pages\\rotate\\rotate.component.ts","C:\\Users\\Claudio\\Downloads\\test-project\\src\\app\\pages\\rotate\\rotate.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-rotate',\n  templateUrl: './rotate.component.html',\n  styleUrls: ['./rotate.component.scss']\n})\nexport class RotateComponent implements OnInit {\n  public rotateDegreesForm : FormGroup;\n  public submitted = false;\n\n\n  constructor(){\n\n  }\n\n  ngOnInit(): void {\n    this.rotateDegreesForm = new FormGroup({\n      degrees: new FormControl([0,\n      Validators.required, Validators.min(0), Validators.max(360)]),\n  })\n  }\n\n  get rotateDegreesFormControl() {\n    return this.rotateDegreesForm.controls;\n  }\n  \n  rotate() {\n    this.submitted = true;\n    if (this.rotateDegreesForm.valid) {\n      console.log(this.rotateDegreesForm);\n    }\n  }\n}\n","<div class=\"input-group input-group-sm mb-3 mt-3 d-flex justify-content-center\">\n    <form [formGroup]=\"rotateDegreesForm\" class=\"d-flex text-center\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Rotate degrees</span>\n        <input type=\"number\" class=\"form-control\" formControlName=\"degrees\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\">\n        <span class=\"text-danger\"\n        *ngIf=\"(rotateDegreesForm.controls['degrees'].touched || submitted) && rotateDegreesForm.controls['degrees'].errors\">\n        Value required\n    </span>\n        <button type=\"button\" (click)=\"rotate()\" class=\"btn btn-primary\">Rotate</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}